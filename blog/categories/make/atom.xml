<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Make | My Octopress Blog]]></title>
  <link href="http://martinbj2008.github.io/blog/categories/make/atom.xml" rel="self"/>
  <link href="http://martinbj2008.github.io/"/>
  <updated>2015-05-21T16:26:25+08:00</updated>
  <id>http://martinbj2008.github.io/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Automake 产生步骤]]></title>
    <link href="http://martinbj2008.github.io/blog/2007/06/29/automake/"/>
    <updated>2007-06-29T00:00:00+08:00</updated>
    <id>http://martinbj2008.github.io/blog/2007/06/29/automake</id>
    <content type="html"><![CDATA[<p><img src="http://martinbj2008.github.io/images/automake.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Autotools]]></title>
    <link href="http://martinbj2008.github.io/blog/2007/06/22/autotools/"/>
    <updated>2007-06-22T00:00:00+08:00</updated>
    <id>http://martinbj2008.github.io/blog/2007/06/22/autotools</id>
    <content type="html"><![CDATA[<h2>步骤简要表述：</h2>

<ol>
<li>创建 configure.ac 文件</li>
<li>在根目录及各个子目录下依次创建Makefile.am文件。</li>
<li>使用命令“autoreconf &ndash;install” 命令自动生成confiugre文件</li>
<li>执行新生成的脚本 configure</li>
<li>执行make文件。</li>
</ol>


<!-- more -->


<h3>步骤1：创建一个configure.ac</h3>

<p>内容如下：</p>

<h1>Process this file with autoconf to produce a configure script.</h1>

<p>AC_PREREQ(2.59)</p>

<h1>需要手动修改</h1>

<p>AC_INIT(realview, 1.0, )</p>

<h1>需要手动添加，选项foreign放宽对软件的发行要求。</h1>

<p>AM_INIT_AUTOMAKE(-Wall -Werror foreign)
AC_CONFIG_SRCDIR([config.h.in])
AC_CONFIG_HEADER([config.h])</p>

<h1>Checks for programs.</h1>

<p>AC_PROG_CXX
AC_PROG_CC</p>

<h1>Checks for libraries.</h1>

<h1>FIXME: Replace <code>main' with a function in</code>-lpthread':</h1>

<p>AC_CHECK_LIB([pthread], [main])</p>

<h1>Checks for header files.</h1>

<p>AC_HEADER_STDC
AC_CHECK_HEADERS([arpa/inet.h netinet/in.h string.h sys/socket.h unistd.h])</p>

<h1>Checks for typedefs, structures, and compiler characteristics.</h1>

<p>AC_HEADER_STDBOOL
AC_C_CONST
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME</p>

<h1>Checks for library functions.</h1>

<p>AC_FUNC_SELECT_ARGTYPES
AC_CHECK_FUNCS([inet_ntoa memset select socket strstr])</p>

<h1>如果为多级目录树，所有的makefile文件需要在此列出。</h1>

<p>AC_CONFIG_FILES([Makefile      src/Makefile           test/Makefile])<br/>
AC_OUTPUT
#</p>

<h3>Makefile.am文件示例：</h3>

<h4>根目录下的Makefile.am文件</h4>

<p>SUBDIRS=src test
KE_OPTIONS=foreign
AM_CPPFLAGS=-I ./src ./test</p>

<h4>src目录下的Makefile.am文件</h4>

<p>bin_PROGRAMS=realview
realview_SOURCES=basetype.h console.cpp console.h http.cpp http.h ipdaemon.cpp ipdaemon.h \
MFCString.cpp MFCString.h
AM_LDFLAGS=-lpthread
AM_CPPFLAGS=-I ./src ../test</p>
]]></content>
  </entry>
  
</feed>
